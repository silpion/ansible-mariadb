---
- name: Assert required backupjob variables exist
  tags:
    - mariadb
    - mariadb_dump
  with_items: "{{ mariadb_backupjobs }}"
  assert:
    that:
      - item.name is defined
      - item.backupuserpass is defined

- name: Template dump vars file
  tags:
    - mariadb
    - mariadb_dump
  when: mariadb_backupjobs|length > 0
  changed_when: false
  always_run: true
  local_action: template
  args:
    src: mariadb_dump_localvars.j2
    dest: "{{ role_path }}/vars/temp/{{ inventory_hostname }}_mariadb_dump.yml"
    owner: "{{ lookup('env', 'USER') }}"
    mode: 0600

- name: Include dump vars
  tags:
    - mariadb
    - mariadb_dump
  when: mariadb_backupjobs|length > 0
  include_vars: "temp/{{ inventory_hostname }}_mariadb_dump.yml"

- name: Create mariadb_dump_destinationdir
  tags:
    - mariadb
    - mariadb_dump
  become: true
  with_items: "{{ mariadb_roleinternal_backupjobs }}"
  file:
    state: directory
    path: "{{ item.destinationdir }}"
    owner: 0
    group: 0
    mode: 0755

- name: Deploy backupscript
  tags:
    - mariadb
    - mariadb_dump
  become: true
  with_items: "{{ mariadb_roleinternal_backupjobs }}"
  template:
    src: mariadb_dump.j2
    dest: "{{ mariadb_backup_scriptbasepath }}/mariadb_backup_{{ item.name }}.sh"
    owner: 0
    group: 0
    mode: 0700

- name: Create cronjob for backupscript
  tags:
    - mariadb
    - mariadb_dump
  become: true
  with_items: "{{ mariadb_roleinternal_backupjobs }}"
  cron:
    state: present
    job: "{{mariadb_backup_scriptbasepath }}/mariadb_backup_{{ item.name }}.sh"
    name: "mariadb_backup_{{ item.name }}"
    minute: 0
    hour: "{{ item.hour }}"
    weekday: "{{ item.dayofweek }}"
