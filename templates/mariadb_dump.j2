#!/bin/bash

set -euo pipefail

#Array, may contain multiple databases
db=({% if item.databases == 'all' %}'--all-databases'{% else %}{% for db in item.databases %}{{ db }} {% endfor %}{% endif %})
db_user="{{ item.username }}"
db_password="{{ item.pass }}"

db_dir="{{ item.destinationdir }}"
db_file="$(date +%F-%H-%M)-{{ item.name }}.sql.gz"

MYSQLDUMP="/usr/bin/mysqldump"
GZIP="/bin/gzip"
FIND="/usr/bin/find"


mysql_dump(){
        for database in ${db[*]};do
                echo -e "\nDB $database is beeing backupted\n"
                $MYSQLDUMP -u $db_user -p${db_password} --single-transaction --quick $database | $GZIP > $db_dir/$db_file
        done
}

{% if item.autodeleteafter %}
remove_old_files(){
        echo -e "\nREMOVE files older than {{ item.autodeleteafter }} days\n"
        for database in ${db[*]};do
                $FIND $db_dir -name "*{{ item.name }}*" -mtime +{{ item.autodeleteafter }} -exec rm {} \;
        done
}
{% endif %}

set_perm(){
        chmod -R 400 $db_dir/*
}

mysql_dump
{% if item.autodeleteafter %}
remove_old_files
{% endif %}
set_perm
